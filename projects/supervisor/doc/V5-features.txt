Supervisor Firmware V5 features.	2019-11-06 KSTR
Last changed :
	2020-05-19 KSTR		: implement power-cycling hidden feature

V5.x firmware is primarily intedend to be used with V7.1 hardware but it was attempted
to remain fully compatible to V6 & V7 hardware and older Firmwares for BBB and LPC
(full testing tbd).


1) Muting Control via LPC control line.
A GPIO Pin (Port A3) is sensed for a continuously applied square-wave of 10Hz (100ms), +-10%.
A duty cycle of 70%+-10% (70ms high, 30ms low) is interpreted as "unmute request", and
a duty cycle of 30%+-10% is interpreted as "mute request".
The detector is integrating, 3 repeated constant patterns must be applied to cause changes.
Therefore, reaction time is about 400ms.
Unknown patterns (frequency and duty cycle), including noise and DC, will cause the default
unmuting strategy will be used, which is a fixed timeout after power-up (~30seconds).

The LPC Muting Control can be overriden by commands via the BBB Command&Status Interface.


2) BBB Command&Status Interface (only available with Uniboard Rev 7.1 and later, and with V7 Uniboards
after rework) :
A USART (async. serial interface) connection is used between Supervisor and BBB ('tty5', !!needs two
wires to be patched on BBB's "P8"-Pinheader!!).

Setup is : 1200bps, 8 data bits, 2 stop bit, odd parity.

BBB Pins used are :
TXD (as seen from Supervisor)	: gpio1[15](P8.15)  and  uart5_rxd(P8.38) via patch wire
RXD (as seen from Supervisor)	: gpio1[26](P8.14)  and  uart5_txd(P8.37) via patch wire
	

2a) Supervisor contiuously sends a 3-byte sequence: Status Byte, Hardware-ID, Firmware-ID:
	- Status Byte
		Bit 7 	: always == 1 (delimiter)
		Bit 6&5	: Supervisor Status (00:Standby, 01:Booting, 10:Running, 11:Shutdown)
			  (00:Standby is for completeness only, as the UART is off when BBB has no power)
		Bit 4	: Supervisor Power-Button Locked
		Bit 3	: unused (0)
		Bit 2	: Muting Override Enable : Enables overriding of the Audio Muting
		Bit 1	: Muting Override Value : State of the Muting applied by Override (1:unmuted)
		Bit 0	: Current Muting State : Actual state of the audio path relays. 1:unmuted

	- Hardware-ID, decimal value of the Hardware Version of the Uniboard as detected:
		71	: Version 7.1
	
	- Firmware-ID, decimal value of the Firmware Version ID:
		50	: Version 5.0
		

2b) Supervisor accepts 3-byte commands :
	First and last byte is character 'c'.
	Middle character is the actual command:
	- 'L'/'l'	: enable/disable --Power Button [L]ocking-- (effective only in "Running" or "Booting" mode)
	The Locking is disabled and reset on transtion into "Standby" and "Shutdown" states.
	- 'U'/'u'	: set/reset the state ([U]nmute/[m[u]ute) applied during Muting Override
	- 'O'/'o'	: enable/disable --Muting [O]verride--
	Muting Override is only effective until a non-maskable Muting corrurs, which happens on
	transition into "Shutdown" and "Booting" states, and which also resets the Override.

	From a terminal, simply type, for  eg 'cLc' to activate "Power Button Locking".

3) In-Service Reprogramming (only available with Uniboard Rev 7.1 and later) :
-- work in progress --
Supervisor now can be reprogrammed on-the-fly from the BBB. The low-level hardware interface
is already tested and consist of the following signals (applied via BBB GPIOs) :
	- Output Enable #1 (toggling line, at 100Hz, more than 200ms)
	- Output Enable #2 (static , neg. logic)
	- PWR (makes sure power remains applied to the whole system, overriding the supervisor)
	- /Reset, SCK, MISO and MOSI, the 4 signals needed to program the IC
	The bracketing sequence to programm is:
		- Set 'PWR'	(enable)
		- Set '/OE2'	(disable)
		- Set '/RST'
		- Start 100Hz toggling sequence on OE1, wait 200ms
		- Clear '/OE2'	(enable)
		- Start Programming
		- Set '/OE2'	(disable)
		- Stop 100Hz toggling on OE1
	If a V5.x Firmware is present, then BBB may request "Power Button Locking" and wait until it is asserted,
	for additional safety.

	
4) Automatic Restart when a Power-Fail event happened during "Booting" and "Running" states:
	- When the latching switch option is used (V7.1 hardware only), this accomplished
	  by this hardware switch right away.
	- When the Push-Button is used (standard in V7&V6, and optional for V7.1), the C15
	  restarts when it was up before the power had failed.


5) Hard-coded or hidden feature for Power-Cycling.
Selectable via #defines (see main.c)
The feature is implemented either as hard-coded version where it cannot be switched off and
normal operation of the C15 will be impossible or as a hidden feature of the power button/switch:
There now is a counter which counts the number power-button/switch actions. For C15's with buttons,
the number of presses is counted, for C15's with switches the number of in&out cycles is counted.
The switch/button actions are interpreted in the same way as a normal action, that is, the de-bouncing
time (>600ms) until a switch/button action is considered stable has to be respected.
The counter is reset in the early boot stage, on the transition from "Standby" to "Booting".
When the counter reaches a value of 15, the power-cycling mode is toggled and the counter is reset.
When power-cycling mode is engaged, the C15 will be shut down after 3 minutes and re-started again, 
cycling forever (or until power-cycling is disengaged). Switch/button can be use to shorten the cycle,
starting a shut down as in normal operation.
Engaged power-cycling is always indicated by a very fast blinking power LED and the blinking pattern is not changed
when the C15 changes state, unlike to the normal LED indication schemes of states.
